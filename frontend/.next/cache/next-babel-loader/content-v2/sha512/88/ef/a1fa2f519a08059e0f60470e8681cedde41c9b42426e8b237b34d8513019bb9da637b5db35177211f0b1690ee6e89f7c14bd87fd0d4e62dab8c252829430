{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport SubmitBtn from './SubmitBtn';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nvar Form = styled.form.withConfig({\n  displayName: \"WorkoutForm__Form\",\n  componentId: \"yjzq5p-0\"\n})([\"display:flex;flex-direction:column;padding-bottom:1rem;width:90%;box-sizing:border-box;border:2px dashed salmon;margin:0 auto;align-items:center;\"]);\n_c = Form;\nvar Group = styled.div.withConfig({\n  displayName: \"WorkoutForm__Group\",\n  componentId: \"yjzq5p-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;width:100%;\"]);\n_c2 = Group;\nexport default function WorkoutForm() {\n  _s();\n\n  var router = useRouter();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState([]),\n      routine = _useState[0],\n      setRoutine = _useState[1];\n\n  var _useState2 = useState([]),\n      exercise = _useState2[0],\n      setExercise = _useState2[1];\n\n  var urlValue = router.query; // { id: 34 }\n\n  var currentWorkoutID = urlValue.id; // 34\n\n  var onSubmit = function onSubmit(data) {\n    fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(function (res) {\n      switch (res.status) {\n        case 400:\n          console.log('This is a 400 error.');\n          break;\n\n        case 429:\n          console.log('This is a 429 error. Rate limit exceeded');\n          break;\n\n        case 201:\n          res.json().then(function (data) {\n            // request sent\n            console.log('this worked');\n            alert('Workout complete!'); // router.push('/routines');\n          });\n      }\n    });\n  };\n\n  useEffect(function () {\n    function doFetch() {\n      return _doFetch.apply(this, arguments);\n    }\n\n    function _doFetch() {\n      _doFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  credentials: 'include'\n                });\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                body = _context.sent;\n                console.log('body is ...', body);\n                setExercise(body.currentWorkout.RoutineExercises);\n                setRoutine(body.currentWorkout.RoutineName);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _doFetch.apply(this, arguments);\n    }\n\n    doFetch();\n  }, []);\n  var currentDate = new Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", routine, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", currentDate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", exercise[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"firstExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), \" \", errors.firstExercise_weight && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"firstExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), \" \", errors.firstExercise_sets && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"firstExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), \" \", errors.firstExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Invalid input \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", exercise[1], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"secondExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), \" \", errors.secondExercise_weight && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"secondExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), \" \", errors.secondExercise_sets && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"secondExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), \" \", errors.secondExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Invalid input \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", exercise[2], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"secondExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), \" \", errors.secondExercise_weight && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"secondExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), \" \", errors.secondExercise_sets && \"Invalid input\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"secondExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), \" \", errors.secondExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Invalid input \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", exercise[3], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fourthExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fourthExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fourthExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", exercise[4], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fifthExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fifthExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        name: \"fifthExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \" Finish workout \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 14\n  }, this);\n}\n\n_s(WorkoutForm, \"KYpipcONTOZ/h9AKvCogXbT39DE=\", false, function () {\n  return [useRouter, useForm];\n});\n\n_c3 = WorkoutForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Group\");\n$RefreshReg$(_c3, \"WorkoutForm\");","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js"],"names":["styled","SubmitBtn","React","useState","useEffect","useForm","useRouter","Form","form","Group","div","WorkoutForm","router","register","handleSubmit","errors","routine","setRoutine","exercise","setExercise","urlValue","query","currentWorkoutID","id","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","alert","doFetch","currentWorkout","RoutineExercises","RoutineName","currentDate","Date","toLocaleString","required","maxLength","pattern","firstExercise_weight","max","firstExercise_sets","firstExercise_reps","secondExercise_weight","secondExercise_sets","secondExercise_reps"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport SubmitBtn from './SubmitBtn'\nimport React, {\n    useState,\n    useEffect\n} from 'react'\nimport {\n    useForm,\n} from \"react-hook-form\";\nimport {\n    useRouter\n} from 'next/router'\n\nconst Form = styled.form `\n    display: flex;\n    flex-direction: column;\n    padding-bottom: 1rem;\n    width: 90%;\n    box-sizing: border-box;\n    border: 2px dashed salmon;\n    margin: 0 auto;\n    align-items: center;\n`\n\nconst Group = styled.div `\n    padding: 0.5rem 0;\n    margin: 0.5rem 0;\n    width: 100%;\n`\n\nexport default function WorkoutForm() {\n\n    const router = useRouter();\n\n    const {\n        register,\n        handleSubmit,\n        errors\n    } = useForm();\n\n    const [routine, setRoutine] = useState([]);\n    const [exercise, setExercise] = useState([]);\n\n    let urlValue = router.query; // { id: 34 }\n    let currentWorkoutID = urlValue.id; // 34\n\n    const onSubmit = (data) => {\n        fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data),\n                credentials: 'include',\n            })\n            .then((res) => {\n                switch (res.status) {\n                    case 400:\n                        console.log('This is a 400 error.');\n                        break;\n                    case 429:\n                        console.log('This is a 429 error. Rate limit exceeded');\n                        break;\n                    case 201:\n                        res.json().then((data) => {\n                            // request sent\n                            console.log('this worked');\n                            alert('Workout complete!');\n                            // router.push('/routines');\n                        })\n                }\n            })\n    }\n\n    useEffect(() => {\n        async function doFetch() {\n            const res = await fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n            });\n            const body = await res.json();\n            console.log('body is ...', body);\n            setExercise(body.currentWorkout.RoutineExercises);\n            setRoutine(body.currentWorkout.RoutineName)\n        }\n\n        doFetch();\n    }, []);\n\n    let currentDate = new Date().toLocaleString();\n\n    return ( <\n            Form onSubmit = {\n                handleSubmit(onSubmit)\n            } >\n\n            <\n            Group >\n            <\n            p > {\n                routine\n            } < /p> <\n            p > {\n                currentDate\n            } < /p> <\n            /Group>\n\n            <\n            Group >\n            <\n            label > {\n                exercise[0]\n            } < /label><br / >\n            <\n            input ref = {\n                register({\n                    required: true,\n                    maxLength: 6,\n                    pattern: /^[A-Za-z]+$/i\n                })\n            }\n            type = \"number\"\n            name = \"firstExercise_weight\"\n            placeholder = \"Enter weight in KG...\" / > {\n                errors.firstExercise_weight && \"Invalid input\"\n            } < br / >\n            <\n            input ref = {\n                register({\n                    required: true,\n                    max: 4\n                })\n            }\n            type = \"number\"\n            name = \"firstExercise_sets\"\n            placeholder = \"Enter sets...\" / > {\n                errors.firstExercise_sets && \"Invalid input\"\n            } < br / >\n            <\n            input ref = {\n                register({\n                    required: true,\n                    max: 40\n                })\n            }\n            type = \"number\"\n            name = \"firstExercise_reps\"\n            placeholder = \"Enter reps...\" / > {\n                errors.firstExercise_reps && < span > Invalid input < /span>}<br / >\n                <\n                /Group> <\n                Group >\n                <\n                label > {\n                    exercise[1]\n                } < /label><br / >\n                <\n                input ref = {\n                    register({\n                        required: true,\n                        maxLength: 6,\n                        pattern: /^[A-Za-z]+$/i\n                    })\n                }\n                type = \"number\"\n                name = \"secondExercise_weight\"\n                placeholder = \"Enter weight in KG...\" / > {\n                    errors.secondExercise_weight && \"Invalid input\"\n                } < br / >\n                <\n                input ref = {\n                    register({\n                        required: true,\n                        max: 4\n                    })\n                }\n                type = \"number\"\n                name = \"secondExercise_sets\"\n                placeholder = \"Enter sets...\" / > {\n                    errors.secondExercise_sets && \"Invalid input\"\n                } < br / >\n                <\n                input ref = {\n                    register({\n                        required: true,\n                        max: 40\n                    })\n                }\n                type = \"number\"\n                name = \"secondExercise_reps\"\n                placeholder = \"Enter reps...\" / > {\n                    errors.secondExercise_reps && < span > Invalid input < /span>}<br / >\n                    <\n                    /Group> <\n                    Group >\n                    <\n                    label > {\n                        exercise[2]\n                    } < /label><br / >\n                    <\n                    input ref = {\n                        register({\n                            required: true,\n                            maxLength: 6,\n                            pattern: /^[A-Za-z]+$/i\n                        })\n                    }\n                    type = \"number\"\n                    name = \"secondExercise_weight\"\n                    placeholder = \"Enter weight in KG...\" / > {\n                        errors.secondExercise_weight && \"Invalid input\"\n                    } < br / >\n                    <\n                    input ref = {\n                        register({\n                            required: true,\n                            max: 4\n                        })\n                    }\n                    type = \"number\"\n                    name = \"secondExercise_sets\"\n                    placeholder = \"Enter sets...\" / > {\n                        errors.secondExercise_sets && \"Invalid input\"\n                    } < br / >\n                    <\n                    input ref = {\n                        register({\n                            required: true,\n                            max: 40\n                        })\n                    }\n                    type = \"number\"\n                    name = \"secondExercise_reps\"\n                    placeholder = \"Enter reps...\" / > {\n                        errors.secondExercise_reps && < span > Invalid input < /span>}<br / >\n                        <\n                        /Group> <\n                        Group >\n                        <\n                        label > {\n                            exercise[3]\n                        } < /label><br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fourthExercise_weight\"\n                        placeholder = \"Enter weight in KG...\" / > < br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fourthExercise_sets\"\n                        placeholder = \"Enter sets...\" / > < br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fourthExercise_reps\"\n                        placeholder = \"Enter reps...\" / >\n                        <\n                        /Group> <\n                        Group >\n                        <\n                        label > {\n                            exercise[4]\n                        } < /label><br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fifthExercise_weight\"\n                        placeholder = \"Enter weight in KG...\" / > < br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fifthExercise_sets\"\n                        placeholder = \"Enter sets...\" / > < br / >\n                        <\n                        input ref = {\n                            register\n                        }\n                        type = \"number\"\n                        name = \"fifthExercise_reps\"\n                        placeholder = \"Enter reps...\" / >\n                        <\n                        /Group>\n\n                        {\n                            /* \n                                    <div>\n                                        <div>\n                                            {routine}\n                                        </div>\n                                        <div>\n                                            <p>Start Time</p>\n                                            <input ref={register} name=\"currentDate\" value={currentDate} disabled />\n                                        </div>\n                                    </div>\n\n                                    {exercise.map((exercise, idx) => {\n                                        return (\n                                            <Group key={idx}>\n                                                <input ref={register} name=\"exercise_name\" value={exercise} disabled />\n                                                <div>\n                                                    <label>Weight : </label>\n                                                    <input ref={register} name=\"weight\" placeholder=\"Enter weight...\" />\n                                                </div>\n                                                <div>\n                                                    <label>Sets: </label>\n                                                    <input ref={register} name=\"sets\" placeholder=\"Enter sets...\" />\n                                                </div>\n                                                <div>\n                                                    <label>Reps: </label>\n                                                    <input ref={register} name=\"reps\" placeholder=\"Enter reps...\" />\n                                                </div>\n                                            </Group>\n                                        )\n                                    })} */\n                        }\n\n                        <\n                        SubmitBtn type = \"submit\" > Finish workout < /SubmitBtn> <\n                        /Form>\n                    )\n                }"]},"metadata":{},"sourceType":"module"}