{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/LoginForm.js\";\nimport React, { useState } from 'react';\nimport SubmitBtn from './SubmitBtn';\nimport Input from './FormInput';\nimport ErrorMessage from '../Common/ErrorMessage';\nimport styled from 'styled-components';\nconst Form = styled.form.withConfig({\n  displayName: \"LoginForm__Form\",\n  componentId: \"sc-1udqss8-0\"\n})([\"display:flex;flex-direction:column;width:18rem;\"]);\n\nconst LoginForm = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: usernameErr,\n    1: setUsernameErr\n  } = useState({});\n  const {\n    0: passwordErr,\n    1: setPasswordErr\n  } = useState({}); // Prevents form from submitting normally on submit\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const isValid = formValidation(); // If the data that is input is valid -\n\n    if (isValid) {\n      // Send this data to the api\n      setUsername('');\n      setPassword('');\n    }\n  };\n  /* Frontend form validation is handled here */\n\n\n  const formValidation = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n    let isValid = true; // If username is left empty or length of the username is less than five characters -\n\n    if (username.length === 0) {\n      usernameErr.usernameEmpty = \"You must enter a username.\";\n    } else if (username.length < 5) {\n      usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n      isValid = false;\n    } // If the length of the password is less than three characters -\n\n\n    if (password.length === 0) {\n      passwordErr.passwordEmpty = \"You must enter a password.\";\n    } else if (password.length < 4) {\n      passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\n      isValid = false;\n    } // Update error objects\n\n\n    setUsernameErr(usernameErr);\n    setPasswordErr(passwordErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), Object.keys(usernameErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: usernameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), Object.keys(passwordErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: passwordErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/LoginForm.js"],"names":["React","useState","SubmitBtn","Input","ErrorMessage","styled","Form","form","LoginForm","username","setUsername","password","setPassword","usernameErr","setUsernameErr","passwordErr","setPasswordErr","onSubmit","e","preventDefault","isValid","formValidation","length","usernameEmpty","usernameShort","passwordEmpty","passwordShort","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SubmitBtn from './SubmitBtn'\nimport Input from './FormInput'\nimport ErrorMessage from '../Common/ErrorMessage'\nimport styled from 'styled-components'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n`\n\nconst LoginForm = () => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [usernameErr, setUsernameErr] = useState({});\n    const [passwordErr, setPasswordErr] = useState({});\n\n    // Prevents form from submitting normally on submit\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const isValid = formValidation();\n        // If the data that is input is valid -\n        if (isValid) {\n            // Send this data to the api\n            setUsername('');\n            setPassword('');\n        }\n    }\n\n    /* Frontend form validation is handled here */\n    const formValidation = () => {\n        const usernameErr = {};\n        const passwordErr = {};\n        let isValid = true;\n\n        // If username is left empty or length of the username is less than five characters -\n        if (username.length === 0) {\n            usernameErr.usernameEmpty = \"You must enter a username.\";\n        } else if (username.length < 5) {\n            usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n            isValid = false;\n        }\n\n        // If the length of the password is less than three characters -\n        if (password.length === 0) {\n            passwordErr.passwordEmpty = \"You must enter a password.\";\n        } else if (password.length < 4) {\n            passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\n            isValid = false;\n        }\n\n        // Update error objects\n        setUsernameErr(usernameErr);\n        setPasswordErr(passwordErr);\n        return isValid;\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            {/* <label for=\"username\">Username : </label> */}\n            <Input type=\"text\" \n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => {setUsername(e.target.value)}}/>\n                    {Object.keys(usernameErr).map((key) => {\n                       return <ErrorMessage>{usernameErr[key]}</ErrorMessage>\n                   })}\n            {/* <label for=\"password\">Password : </label> */}\n            <Input type=\"password\" \n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {setPassword(e.target.value)}}/>\n                    {Object.keys(passwordErr).map((key) => {\n                       return <ErrorMessage>{passwordErr[key]}</ErrorMessage>\n                   })}\n            <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n        </Form>\n    )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}