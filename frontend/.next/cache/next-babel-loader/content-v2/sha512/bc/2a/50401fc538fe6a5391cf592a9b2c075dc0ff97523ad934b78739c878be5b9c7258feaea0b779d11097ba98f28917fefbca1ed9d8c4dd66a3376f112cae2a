{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Input from './FormInput';\nimport SubmitBtn from './SubmitBtn';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage';\nimport { useRouter } from 'next/router';\nvar Form = styled.form.withConfig({\n  displayName: \"WorkoutForm__Form\",\n  componentId: \"yjzq5p-0\"\n})([\"display:flex;flex-direction:column;width:18rem;padding-bottom:1rem;\"]);\n_c = Form;\nvar Group = styled.div.withConfig({\n  displayName: \"WorkoutForm__Group\",\n  componentId: \"yjzq5p-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;\"]);\nexport default function WorkoutForm() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState([]),\n      routine = _useState[0],\n      setRoutine = _useState[1];\n\n  var _useState2 = useState([]),\n      exercise = _useState2[0],\n      setExercise = _useState2[1]; // Handles the form submission\n\n\n  var onSubmit = function onSubmit(data) {\n    // If the input data is valid - \n    // Make a POST request to our api route with the input data\n    fetch('http://localhost:3000/routines', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(function (res) {\n      switch (res.status) {\n        case 400:\n          console.log('This is a 400 error.');\n          break;\n\n        case 429:\n          console.log('This is a 429 error. Rate limit exceeded');\n          break;\n\n        case 201:\n          res.json().then(function (data) {\n            // request sent\n            console.log('this worked');\n            alert('Workout complete!'); // router.push('/routines');\n          });\n      }\n    });\n  };\n\n  console.log(router.query);\n  var urlValue = router.query; // { id: 34 }\n\n  var currentWorkoutID = urlValue.id; // 34\n\n  console.log(currentWorkoutID);\n  useEffect(function () {\n    function doFetch() {\n      return _doFetch.apply(this, arguments);\n    }\n\n    function _doFetch() {\n      _doFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  credentials: 'include'\n                });\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                body = _context.sent;\n                console.log('body is ...', body); //   setExercise(body.RoutineExercises);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _doFetch.apply(this, arguments);\n    }\n\n    doFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [exercise.map(function (exercise, idx) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: exercise.exercise_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Weight\",\n          placeholder: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Reps\",\n            placeholder: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, _this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Finish workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutForm, \"Oqu2yXWnnefN04wJPGmTRMuHYMY=\", false, function () {\n  return [useRouter, useForm];\n});\n\n_c2 = WorkoutForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"WorkoutForm\");","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js"],"names":["styled","Input","SubmitBtn","React","useState","useEffect","useForm","ErrorMessage","useRouter","Form","form","Group","div","WorkoutForm","router","register","handleSubmit","errors","routine","setRoutine","exercise","setExercise","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","alert","query","urlValue","currentWorkoutID","id","doFetch","map","idx","exercise_name"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport Input from './FormInput'\nimport SubmitBtn from './SubmitBtn'\nimport React, { useState, useEffect } from 'react'\nimport { useForm,  } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage'\nimport { useRouter } from 'next/router'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n    padding-bottom: 1rem;\n`\n\nconst Group = styled.div`\n    padding: 0.5rem 0;\n    margin: 0.5rem 0;\n    // border: 1px dashed grey;\n`\n\nexport default function WorkoutForm() {\n\n    const router = useRouter();\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const [routine, setRoutine] = useState([]);\n    const [exercise, setExercise] = useState([]);\n\n    // Handles the form submission\n    const onSubmit = (data) => {\n        // If the input data is valid - \n        // Make a POST request to our api route with the input data\n        fetch('http://localhost:3000/routines', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            credentials: 'include',\n            })\n            .then((res) => {\n            switch(res.status) {\n                case 400:\n                    console.log('This is a 400 error.');\n                    break;\n                case 429:\n                    console.log('This is a 429 error. Rate limit exceeded');\n                    break;\n                case 201:\n                    res.json().then((data) => {\n                        // request sent\n                        console.log('this worked');\n                        alert('Workout complete!');\n                        // router.push('/routines');\n                    })\n            }})\n    }\n\n    console.log(router.query);\n    let urlValue = router.query; // { id: 34 }\n    let currentWorkoutID = urlValue.id; // 34\n    console.log(currentWorkoutID);\n\n    useEffect(() => {\n        async function doFetch() {\n          const res = await fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n          });\n          const body = await res.json();\n          console.log('body is ...', body);\n        //   setExercise(body.RoutineExercises);\n        }\n    \n        doFetch();\n      }, []);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n\n        {exercise.map((exercise, idx) => {\n            return (\n                <div key={idx}>\n                    <label>{exercise.exercise_name}</label>\n                    <input type=\"number\" name=\"Weight\" placeholder=\"Weight\"/>\n                    <div>\n                        <label>Set 1</label>\n                        <input type=\"number\" name=\"Reps\" placeholder=\"Reps\"/>\n                    </div>\n                </div>\n            )\n        })}\n{/* \n            <div>\n                <label>Placeholder Exercise 1</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 2</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 3</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 4</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <br /> */}\n            {/* <div>\n            <label> Routine Name CHANGE! : </label>\n            <Input\n                type=\"text\"\n                placeholder=\"Workout form\"\n                name=\"routine_name\"\n                ref={register}\n            />\n\n            </div>\n\n            <Group>\n                <label> Exercise 1 : </label>\n                <select name=\"first_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 2 : </label>\n                <select name=\"second_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 3 : </label>\n                <select name=\"third_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 4 : </label>\n                <select name=\"fourth_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 5 : </label>\n                <select name=\"fifth_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group> */}\n\n\n            <SubmitBtn type=\"submit\">Finish workout</SubmitBtn>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}