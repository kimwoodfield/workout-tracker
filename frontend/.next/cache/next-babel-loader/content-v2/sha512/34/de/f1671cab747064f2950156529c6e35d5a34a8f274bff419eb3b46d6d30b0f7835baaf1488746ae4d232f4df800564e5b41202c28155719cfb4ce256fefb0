{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kimwoodfield\\\\Documents\\\\GitHub\\\\workout-tracker\\\\frontend\\\\components\\\\Forms\\\\LoginForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SubmitBtn from './SubmitBtn';\nimport Input from './FormInput';\nimport ErrorMessage from '../Common/ErrorMessage';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nvar Form = styled.form.withConfig({\n  displayName: \"LoginForm__Form\",\n  componentId: \"sc-1udqss8-0\"\n})([\"display:flex;flex-direction:column;width:18rem;\"]);\n_c = Form;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var router = useRouter(); // Setting the state\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState({}),\n      usernameErr = _useState3[0],\n      setUsernameErr = _useState3[1];\n\n  var _useState4 = useState({}),\n      passwordErr = _useState4[0],\n      setPasswordErr = _useState4[1];\n\n  var _useState5 = useState(false),\n      submitting = _useState5[0],\n      setSubmitting = _useState5[1]; // Handles the form submission\n\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    setSubmitting(true);\n    var isValid = formValidation(); // If the input data is valid -\n\n    if (isValid) {\n      // Send this data to the api\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(function (res) {\n        return res.json();\n      }) // parse the response as JSON\n      .then(function (data) {\n        // Request sent.\n        if (data.ok === false) {\n          // if the response is a 401, block the submission..\n          console.log(data.msg);\n          alert(data.msg);\n        } else {\n          // if the response is not a 401, allow the submission.\n          console.log(data.msg);\n          alert(data.msg);\n          setUsername('');\n          setPassword('');\n          router.push('/log');\n        }\n      })[\"catch\"](function (err) {\n        // Fetch couldn't send the request.\n        console.log('fetch failed');\n      });\n    } else {\n      e.preventDefault();\n    }\n  };\n  /* Frontend form validation is handled here */\n\n\n  var formValidation = function formValidation() {\n    var usernameErr = {};\n    var passwordErr = {};\n    var isValid = true; // If username is left empty or length of the username is less than five characters -\n\n    if (username.length === 0) {\n      usernameErr.usernameEmpty = \"You must enter a username.\";\n    } else if (username.length < 5) {\n      usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n      isValid = false;\n    } // If the length of the password is less than three characters -\n\n\n    if (password.length === 0) {\n      passwordErr.passwordEmpty = \"You must enter a password.\";\n    } else if (password.length < 4) {\n      passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\n      isValid = false;\n    } // Update error objects\n\n\n    setUsernameErr(usernameErr);\n    setPasswordErr(passwordErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: function onChange(e) {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, _this), Object.keys(usernameErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: usernameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: function onChange(e) {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this), Object.keys(passwordErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: passwordErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoginForm, \"J1tb1RhGsFcPpBZm+eN9SZlIZX0=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/LoginForm.js"],"names":["React","useState","SubmitBtn","Input","ErrorMessage","styled","useRouter","Form","form","LoginForm","router","username","setUsername","password","setPassword","usernameErr","setUsernameErr","passwordErr","setPasswordErr","submitting","setSubmitting","onSubmit","e","preventDefault","isValid","formValidation","fetch","method","headers","body","JSON","stringify","then","res","json","data","ok","console","log","msg","alert","push","err","length","usernameEmpty","usernameShort","passwordEmpty","passwordShort","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport SubmitBtn from './SubmitBtn'\r\nimport Input from './FormInput'\r\nimport ErrorMessage from '../Common/ErrorMessage'\r\nimport styled from 'styled-components'\r\nimport { useRouter } from 'next/router'\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 18rem;\r\n`\r\n\r\nconst LoginForm = () => {\r\n\r\n    const router = useRouter()\r\n\r\n    // Setting the state\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameErr, setUsernameErr] = useState({});\r\n    const [passwordErr, setPasswordErr] = useState({});\r\n\r\n    const [ submitting, setSubmitting ] = useState(false);\r\n\r\n    // Handles the form submission\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitting(true);\r\n        const isValid = formValidation();\r\n        // If the input data is valid -\r\n        if (isValid) {\r\n            // Send this data to the api\r\n            fetch('http://localhost:3000/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            })\r\n            .then(res => res.json()) // parse the response as JSON\r\n            .then(data => {\r\n                // Request sent.\r\n                if (data.ok === false) {\r\n                    // if the response is a 401, block the submission..\r\n                    console.log(data.msg);\r\n                    alert(data.msg);\r\n                } else {\r\n                    // if the response is not a 401, allow the submission.\r\n                    console.log(data.msg);\r\n                    alert(data.msg);\r\n                    setUsername('');\r\n                    setPassword('');\r\n                    router.push('/log');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // Fetch couldn't send the request.\r\n                console.log('fetch failed');\r\n            })\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    /* Frontend form validation is handled here */\r\n    const formValidation = () => {\r\n        const usernameErr = {};\r\n        const passwordErr = {};\r\n        let isValid = true;\r\n\r\n        // If username is left empty or length of the username is less than five characters -\r\n        if (username.length === 0) {\r\n            usernameErr.usernameEmpty = \"You must enter a username.\";\r\n        } else if (username.length < 5) {\r\n            usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\r\n            isValid = false;\r\n        }\r\n\r\n        // If the length of the password is less than three characters -\r\n        if (password.length === 0) {\r\n            passwordErr.passwordEmpty = \"You must enter a password.\";\r\n        } else if (password.length < 4) {\r\n            passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\r\n            isValid = false;\r\n        }\r\n\r\n        // Update error objects\r\n        setUsernameErr(usernameErr);\r\n        setPasswordErr(passwordErr);\r\n        return isValid;\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            {/* <label for=\"username\">Username : </label> */}\r\n            <Input type=\"text\" \r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    {Object.keys(usernameErr).map((key) => {\r\n                       return <ErrorMessage>{usernameErr[key]}</ErrorMessage>\r\n                   })}\r\n            {/* <label for=\"password\">Password : </label> */}\r\n            <Input type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    {Object.keys(passwordErr).map((key) => {\r\n                       return <ErrorMessage>{passwordErr[key]}</ErrorMessage>\r\n                   })}\r\n            <SubmitBtn type=\"submit\">Log In</SubmitBtn>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n"]},"metadata":{},"sourceType":"module"}