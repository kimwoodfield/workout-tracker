{"ast":null,"code":"import _defineProperty from \"C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\n\nvar useForm = function useForm(Validate) {\n  _s();\n\n  var _useState = useState({\n    email: '',\n    fullname: '',\n    username: '',\n    password: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState({}),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = _slicedToArray(useState, 2),\n      isSubmitting = _useState3[0],\n      setIsSubmitting = _useState3[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setErrors(Validate(values));\n  };\n\n  return {\n    handleChange: handleChange,\n    values: values,\n    handleSubmit: handleSubmit,\n    errors: errors\n  };\n};\n\n_s(useForm, \"itFumDJqNOITnwsu8gomgV6zmTw=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/useForm.js"],"names":["useState","useEffect","useForm","Validate","email","fullname","username","password","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","name","value","handleSubmit","preventDefault"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAAA;;AAAA,kBACEH,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,QAAQ,EAAE;AAJuB,GAAD,CADV;AAAA,MACnBC,MADmB;AAAA,MACXC,SADW;;AAAA,mBAOET,QAAQ,CAAC,EAAD,CAPV;AAAA,MAOnBU,MAPmB;AAAA,MAOXC,SAPW;;AAAA,kCAQcX,QARd;AAAA,MAQnBY,YARmB;AAAA,MAQLC,eARK;;AAW1B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AAAA,oBACAA,CAAC,CAACC,MADF;AAAA,QACfC,IADe,aACfA,IADe;AAAA,QACTC,KADS,aACTA,KADS;AAEtBT,IAAAA,SAAS,iCACFD,MADE,2BAEJS,IAFI,EAEGC,KAFH,GAAT;AAIH,GAND;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAJ,CAAC,EAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,QAAQ,CAACK,MAAD,CAAT,CAAT;AACH,GAJD;;AAMA,SAAO;AAAEM,IAAAA,YAAY,EAAZA,YAAF;AAAgBN,IAAAA,MAAM,EAANA,MAAhB;AAAwBW,IAAAA,YAAY,EAAZA,YAAxB;AAAsCT,IAAAA,MAAM,EAANA;AAAtC,GAAP;AACH,CA1BD;;GAAMR,O;;AA4BN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useForm = (Validate) => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        fullname: '',\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState\r\n\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setErrors(Validate(values));\r\n    }\r\n\r\n    return { handleChange, values, handleSubmit, errors }\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}