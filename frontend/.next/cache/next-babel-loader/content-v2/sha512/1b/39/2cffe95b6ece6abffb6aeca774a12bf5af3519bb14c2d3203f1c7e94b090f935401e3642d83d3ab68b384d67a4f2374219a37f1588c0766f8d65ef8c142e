{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/LoginForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SubmitBtn from './SubmitBtn';\nimport Input from './FormInput';\nimport ErrorMessage from '../Common/ErrorMessage';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nvar Form = styled.form.withConfig({\n  displayName: \"LoginForm__Form\",\n  componentId: \"sc-1udqss8-0\"\n})([\"display:flex;flex-direction:column;width:18rem;\"]);\n_c = Form;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var router = useRouter(); // Setting the state\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState({}),\n      usernameErr = _useState3[0],\n      setUsernameErr = _useState3[1];\n\n  var _useState4 = useState({}),\n      passwordErr = _useState4[0],\n      setPasswordErr = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      invalidUser = _useState5[0],\n      setInvalidUser = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      invalidPass = _useState6[0],\n      setInvalidPass = _useState6[1];\n\n  var _useState7 = useState(false),\n      submitting = _useState7[0],\n      setSubmitting = _useState7[1]; // Handles the form submission\n\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    setSubmitting(true);\n    var isValid = formValidation(); // If the input data is valid -\n\n    if (isValid) {\n      // Send this data to the api\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        }) // credentials: \"include\"\n\n      }).then(function (res) {\n        return res.json();\n      }) // parse the response as JSON\n      .then(function (data) {\n        switch (res.status) {\n          case 401:\n            router.push('/login');\n            break;\n\n          case 403:\n            router.push('/login');\n        } // Request sent.\n\n\n        console.log(data);\n        console.log(data.status);\n\n        if (data.status == 400) {\n          console.log(data);\n          setInvalidUser(errors.msg);\n          setUsername('');\n          setPassword('');\n          e.preventDefault();\n        } // If username issue\n\n\n        if (data.status === 401 && data.issue === 'Username') {\n          setInvalidUser(data.msg);\n          setUsername('');\n          setPassword('');\n          e.preventDefault();\n        } // If password issue\n\n\n        if (data.status === 401 && data.issue === 'Password') {\n          setInvalidPass(data.msg);\n          setUsername('');\n          setPassword('');\n          e.preventDefault();\n        }\n\n        if (data.ok === false && data.issue === 'doesnt exist') {\n          // if the response is a 401, block the submission..\n          console.log(data);\n          console.log(data.msg);\n          setInvalidUser(data.msg);\n          setUsername('');\n          setPassword('');\n          e.preventDefault();\n        } else if (data.ok === false) {\n          // if the response is a 401, block the submission..\n          console.log(data);\n          console.log(data.msg);\n          setUsername('');\n          setPassword('');\n          e.preventDefault();\n        } else {\n          // if the response is not a 401, allow the submission.\n          console.log(data.msg);\n          alert(data.msg);\n          setUsername('');\n          setPassword('');\n          router.push('/log');\n        }\n      })[\"catch\"](function (err) {\n        // Fetch couldn't send the request.\n        console.log('fetch failed');\n      });\n    } else {\n      e.preventDefault();\n    }\n  };\n  /* Frontend form validation is handled here */\n\n\n  var formValidation = function formValidation() {\n    var usernameErr = {};\n    var passwordErr = {};\n    var isValid = true; // Update error objects\n\n    setUsernameErr(usernameErr);\n    setPasswordErr(passwordErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: function onChange(e) {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: invalidUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }, _this), Object.keys(usernameErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: usernameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: function onChange(e) {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: invalidPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }, _this), Object.keys(passwordErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: passwordErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoginForm, \"omEQ4loA30C7kp3P6//KxSXj8eo=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/LoginForm.js"],"names":["React","useState","SubmitBtn","Input","ErrorMessage","styled","useRouter","Form","form","LoginForm","router","username","setUsername","password","setPassword","usernameErr","setUsernameErr","passwordErr","setPasswordErr","invalidUser","setInvalidUser","invalidPass","setInvalidPass","submitting","setSubmitting","onSubmit","e","preventDefault","isValid","formValidation","fetch","method","headers","body","JSON","stringify","then","res","json","data","status","push","console","log","errors","msg","issue","ok","alert","err","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SubmitBtn from './SubmitBtn'\nimport Input from './FormInput'\nimport ErrorMessage from '../Common/ErrorMessage'\nimport styled from 'styled-components'\nimport { useRouter } from 'next/router'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n`\n\nconst LoginForm = () => {\n\n    const router = useRouter()\n\n    // Setting the state\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [usernameErr, setUsernameErr] = useState({});\n    const [passwordErr, setPasswordErr] = useState({});\n\n    const [invalidUser, setInvalidUser] = useState(\"\");\n    const [invalidPass, setInvalidPass] = useState(\"\");\n\n\n\n    const [ submitting, setSubmitting ] = useState(false);\n\n    // Handles the form submission\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setSubmitting(true);\n        const isValid = formValidation();\n        // If the input data is valid -\n        if (isValid) {\n            // Send this data to the api\n            fetch('http://localhost:3000/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n                // credentials: \"include\"\n            })\n            .then(res => res.json()) // parse the response as JSON\n            .then(data => {\n                switch(res.status) {\n                    case 401:\n                        router.push('/login');\n                        break;\n                    case 403:\n                        router.push('/login');\n                }\n                // Request sent.\n\n                console.log(data);\n\n                console.log(data.status);\n\n                if (data.status == 400) {\n                    console.log(data);\n                    setInvalidUser(errors.msg);\n                    setUsername('');\n                    setPassword('');\n                    e.preventDefault();\n                }\n\n                // If username issue\n                if (data.status === 401 && data.issue === 'Username') {\n                    setInvalidUser(data.msg);\n                    setUsername('');\n                    setPassword('');\n                    e.preventDefault();\n                }\n                // If password issue\n                if (data.status === 401 && data.issue === 'Password') {\n                    setInvalidPass(data.msg);\n                    setUsername('');\n                    setPassword('');\n                    e.preventDefault();\n                }\n                if (data.ok === false && data.issue === 'doesnt exist') {\n                    // if the response is a 401, block the submission..\n                    console.log(data);\n                    console.log(data.msg);\n                    setInvalidUser(data.msg);\n                    setUsername('');\n                    setPassword('');\n                    e.preventDefault();\n                } else if (data.ok === false) {\n                    // if the response is a 401, block the submission..\n                    console.log(data);\n                    console.log(data.msg);\n                    setUsername('');\n                    setPassword('');\n                    e.preventDefault();\n                } else {\n                    // if the response is not a 401, allow the submission.\n                    console.log(data.msg);\n                    alert(data.msg);\n                    setUsername('');\n                    setPassword('');\n                    router.push('/log');\n                }\n            })\n            .catch(err => {\n                // Fetch couldn't send the request.\n                console.log('fetch failed');\n            })\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    /* Frontend form validation is handled here */\n    const formValidation = () => {\n        const usernameErr = {};\n        const passwordErr = {};\n        let isValid = true;\n\n\n        // Update error objects\n        setUsernameErr(usernameErr);\n        setPasswordErr(passwordErr);\n        return isValid;\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            {/* <label for=\"username\">Username : </label> */}\n            <Input type=\"text\" \n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => {setUsername(e.target.value)}}/>\n                    <ErrorMessage>{invalidUser}</ErrorMessage>\n                    {Object.keys(usernameErr).map((key) => {\n                       return <ErrorMessage>{usernameErr[key]}</ErrorMessage>\n                   })}\n            {/* <label for=\"password\">Password : </label> */}\n            <Input type=\"password\" \n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {setPassword(e.target.value)}}/>\n                    <ErrorMessage>{invalidPass}</ErrorMessage>\n                    {Object.keys(passwordErr).map((key) => {\n                       return <ErrorMessage>{passwordErr[key]}</ErrorMessage>\n                   })}\n            <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n        </Form>\n    )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}