{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/ChooseRoutineForm.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Input from './FormInput';\nimport SubmitBtn from './SubmitBtn';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage';\nimport { useRouter } from 'next/router';\nvar Form = styled.form.withConfig({\n  displayName: \"ChooseRoutineForm__Form\",\n  componentId: \"sc-1esi9s1-0\"\n})([\"display:flex;flex-direction:column;width:18rem;padding-bottom:1rem;\"]);\n_c = Form;\nvar Group = styled.div.withConfig({\n  displayName: \"ChooseRoutineForm__Group\",\n  componentId: \"sc-1esi9s1-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;\"]);\n_c2 = Group;\nvar Padding = styled.div.withConfig({\n  displayName: \"ChooseRoutineForm__Padding\",\n  componentId: \"sc-1esi9s1-2\"\n})([\"display:flex;align-items:center;padding:0.75rem 0.85rem;height:4rem;width:100%;box-sizing:border-box;\"]);\nexport default function ChooseRoutineForm() {\n  _s();\n\n  var router = useRouter();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState([]),\n      routines = _useState[0],\n      setRoutines = _useState[1]; // Handles the form submission\n\n\n  var onSubmit = function onSubmit(data) {\n    // If the input data is valid - \n    // Make a POST request to our api route with the input data\n    fetch('http://localhost:3000/routines', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(function (res) {\n      switch (res.status) {\n        case 400:\n          console.log('This is a 400 error.');\n          break;\n\n        case 429:\n          console.log('This is a 429 error. Rate limit exceeded');\n          break;\n\n        case 201:\n          res.json().then(function (data) {\n            // request sent\n            console.log('this worked');\n            alert('Routine added!');\n            router.push('/routines');\n          });\n      }\n    });\n  };\n\n  useEffect(function () {\n    function doFetch() {\n      return _doFetch.apply(this, arguments);\n    }\n\n    function _doFetch() {\n      _doFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = 'http://localhost:3000/routines';\n                _context.next = 3;\n                return fetch('http://localhost:3000/routines', {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  credentials: 'include'\n                });\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                body = _context.sent;\n                console.log('body is ...', body); //   setRoutines(body.exercisesResults);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _doFetch.apply(this, arguments);\n    }\n\n    doFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Choose a routine : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"first_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select a routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Begin Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChooseRoutineForm, \"JevQMoS3e+mCy5aygiwEHq5H8VA=\", false, function () {\n  return [useRouter, useForm];\n});\n\n_c3 = ChooseRoutineForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Group\");\n$RefreshReg$(_c3, \"ChooseRoutineForm\");","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/ChooseRoutineForm.js"],"names":["styled","Input","SubmitBtn","React","useState","useEffect","useForm","ErrorMessage","useRouter","Form","form","Group","div","Padding","ChooseRoutineForm","router","register","handleSubmit","errors","routines","setRoutines","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","alert","push","doFetch","url"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport Input from './FormInput'\nimport SubmitBtn from './SubmitBtn'\nimport React, { useState, useEffect } from 'react'\nimport { useForm,  } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage'\nimport { useRouter } from 'next/router'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n    padding-bottom: 1rem;\n`\n\nconst Group = styled.div`\n    padding: 0.5rem 0;\n    margin: 0.5rem 0;\n    // border: 1px dashed grey;\n`\n\nconst Padding = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.75rem 0.85rem;\n  height: 4rem;\n  width: 100%;\n  // border: 1px dashed salmon;\n  box-sizing: border-box;\n`\n\nexport default function ChooseRoutineForm() {\n\n    const router = useRouter();\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const [routines, setRoutines] = useState([]);\n\n    // Handles the form submission\n    const onSubmit = (data) => {\n        // If the input data is valid - \n        // Make a POST request to our api route with the input data\n        fetch('http://localhost:3000/routines', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            credentials: 'include',\n            })\n            .then((res) => {\n            switch(res.status) {\n                case 400:\n                    console.log('This is a 400 error.');\n                    break;\n                case 429:\n                    console.log('This is a 429 error. Rate limit exceeded');\n                    break;\n                case 201:\n                    res.json().then((data) => {\n                        // request sent\n                        console.log('this worked');\n                        alert('Routine added!');\n                        router.push('/routines');\n                    })\n            }})\n    }\n\n    useEffect(() => {\n        async function doFetch() {\n          let url = 'http://localhost:3000/routines';\n          const res = await fetch('http://localhost:3000/routines', { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n          });\n          const body = await res.json();\n          console.log('body is ...', body);\n        //   setRoutines(body.exercisesResults);\n        }\n    \n        doFetch();\n      }, []);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n            <Group>\n                <label> Choose a routine : </label>\n                <select name=\"first_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select a routine</option>\n                        {/* {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })} */}\n                </select>\n            </Group>\n\n\n            <SubmitBtn type=\"submit\">Begin Workout</SubmitBtn>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}