{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js\";\nimport styled from 'styled-components';\nimport Input from './FormInput';\nimport SubmitBtn from './SubmitBtn';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage';\nimport { useRouter } from 'next/router';\nconst Form = styled.form.withConfig({\n  displayName: \"WorkoutForm__Form\",\n  componentId: \"yjzq5p-0\"\n})([\"display:flex;flex-direction:column;width:18rem;padding-bottom:1rem;\"]);\nconst Group = styled.div.withConfig({\n  displayName: \"WorkoutForm__Group\",\n  componentId: \"yjzq5p-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;\"]);\nexport default function WorkoutForm() {\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    0: routine,\n    1: setRoutine\n  } = useState([]);\n  const {\n    0: exercise,\n    1: setExercise\n  } = useState([]); // Handles the form submission\n\n  const onSubmit = data => {\n    // If the input data is valid - \n    // Make a POST request to our api route with the input data\n    fetch('http://localhost:3000/routines', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(res => {\n      switch (res.status) {\n        case 400:\n          console.log('This is a 400 error.');\n          break;\n\n        case 429:\n          console.log('This is a 429 error. Rate limit exceeded');\n          break;\n\n        case 201:\n          res.json().then(data => {\n            // request sent\n            console.log('this worked');\n            alert('Workout complete!'); // router.push('/routines');\n          });\n      }\n    });\n  };\n\n  console.log(router.query);\n  let urlValue = router.query; // { id: 34 }\n\n  let currentWorkoutID = urlValue.id; // 34\n\n  console.log(currentWorkoutID);\n  useEffect(() => {\n    async function doFetch() {\n      const res = await fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const body = await res.json();\n      console.log('body is ...', body);\n      setExercise(body.currentWorkout.RoutineExercises);\n      setRoutine(body.currentWorkout.RoutineName);\n    }\n\n    doFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), exercise.map((exercise, idx) => {\n      return /*#__PURE__*/_jsxDEV(Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: exercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Weight : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Weight\",\n            placeholder: \"Enter weight...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set 1 : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Reps\",\n            placeholder: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set 2 : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Reps\",\n            placeholder: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set 3 : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Reps\",\n            placeholder: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set 4 : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Reps\",\n            placeholder: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Finish workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js"],"names":["styled","Input","SubmitBtn","React","useState","useEffect","useForm","ErrorMessage","useRouter","Form","form","Group","div","WorkoutForm","router","register","handleSubmit","errors","routine","setRoutine","exercise","setExercise","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","alert","query","urlValue","currentWorkoutID","id","doFetch","currentWorkout","RoutineExercises","RoutineName","map","idx"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport Input from './FormInput'\nimport SubmitBtn from './SubmitBtn'\nimport React, { useState, useEffect } from 'react'\nimport { useForm,  } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage'\nimport { useRouter } from 'next/router'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n    padding-bottom: 1rem;\n`\n\nconst Group = styled.div`\n    padding: 0.5rem 0;\n    margin: 0.5rem 0;\n    // border: 1px dashed grey;\n`\n\nexport default function WorkoutForm() {\n\n    const router = useRouter();\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const [routine, setRoutine] = useState([]);\n    const [exercise, setExercise] = useState([]);\n\n    // Handles the form submission\n    const onSubmit = (data) => {\n        // If the input data is valid - \n        // Make a POST request to our api route with the input data\n        fetch('http://localhost:3000/routines', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            credentials: 'include',\n            })\n            .then((res) => {\n            switch(res.status) {\n                case 400:\n                    console.log('This is a 400 error.');\n                    break;\n                case 429:\n                    console.log('This is a 429 error. Rate limit exceeded');\n                    break;\n                case 201:\n                    res.json().then((data) => {\n                        // request sent\n                        console.log('this worked');\n                        alert('Workout complete!');\n                        // router.push('/routines');\n                    })\n            }})\n    }\n\n    console.log(router.query);\n    let urlValue = router.query; // { id: 34 }\n    let currentWorkoutID = urlValue.id; // 34\n    console.log(currentWorkoutID);\n\n    useEffect(() => {\n        async function doFetch() {\n          const res = await fetch('http://localhost:3000/currentWorkout/' + currentWorkoutID, { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n          });\n          const body = await res.json();\n          console.log('body is ...', body);\n          setExercise(body.currentWorkout.RoutineExercises);\n          setRoutine(body.currentWorkout.RoutineName)\n        }\n    \n        doFetch();\n      }, []);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n        <div>\n            \n        </div>\n\n        {exercise.map((exercise, idx) => {\n            return (\n                <Group key={idx}>\n                    <label>{exercise}</label><br />\n                    <div>\n                        <label>Weight : </label>\n                        <input type=\"number\" name=\"Weight\" placeholder=\"Enter weight...\"/>\n                    </div>\n                    <div>\n                        <label>Set 1 : </label>\n                        <input type=\"number\" name=\"Reps\" placeholder=\"Reps\"/>\n                    </div>\n                    <div>\n                        <label>Set 2 : </label>\n                        <input type=\"number\" name=\"Reps\" placeholder=\"Reps\"/>\n                    </div>\n                    <div>\n                        <label>Set 3 : </label>\n                        <input type=\"number\" name=\"Reps\" placeholder=\"Reps\"/>\n                    </div>\n                    <div>\n                        <label>Set 4 : </label>\n                        <input type=\"number\" name=\"Reps\" placeholder=\"Reps\"/>\n                    </div>\n                </Group>\n            )\n        })}\n{/* \n            <div>\n                <label>Placeholder Exercise 1</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 2</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 3</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <div>\n                <label>Placeholder Exercise 4</label>\n                <input type=\"number\" name=\"sets\" id=\"\" placeholder=\"sets\"/>\n                <input type=\"number\" name=\"weight\" id=\"\" placeholder=\"weight\"/>\n                <input type=\"number\" name=\"reps\" id=\"\" placeholder=\"reps\"/>\n            </div>\n            <br />\n            <br /> */}\n            {/* <div>\n            <label> Routine Name CHANGE! : </label>\n            <Input\n                type=\"text\"\n                placeholder=\"Workout form\"\n                name=\"routine_name\"\n                ref={register}\n            />\n\n            </div>\n\n            <Group>\n                <label> Exercise 1 : </label>\n                <select name=\"first_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 2 : </label>\n                <select name=\"second_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 3 : </label>\n                <select name=\"third_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 4 : </label>\n                <select name=\"fourth_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group>\n\n            <Group>\n                <label> Exercise 5 : </label>\n                <select name=\"fifth_exercise\" id=\"exercise_type\" ref={register}>\n                    <option selected=\"selected\" disabled>Select an exercise</option>\n                        {exercise.map((exercise, idx) => {\n                            return <option key={idx}>{exercise.exercise_name}</option>\n                        })}\n                </select>\n            </Group> */}\n\n\n            <SubmitBtn type=\"submit\">Finish workout</SubmitBtn>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}