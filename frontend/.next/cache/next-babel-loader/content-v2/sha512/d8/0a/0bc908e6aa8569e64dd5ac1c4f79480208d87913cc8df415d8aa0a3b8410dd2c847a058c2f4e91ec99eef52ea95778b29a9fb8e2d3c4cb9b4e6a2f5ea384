{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kimwoodfield\\\\Documents\\\\GitHub\\\\workout-tracker\\\\frontend\\\\components\\\\Forms\\\\RoutineForm.js\";\nimport styled from 'styled-components';\nimport Input from './FormInput';\nimport SubmitBtn from './SubmitBtn';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport ErrorMessage from '../Common/ErrorMessage';\nimport { useRouter } from 'next/router';\nconst Form = styled.form.withConfig({\n  displayName: \"RoutineForm__Form\",\n  componentId: \"sc-1ufn8ur-0\"\n})([\"display:flex;flex-direction:column;width:18rem;padding-bottom:1rem;\"]);\nconst Group = styled.div.withConfig({\n  displayName: \"RoutineForm__Group\",\n  componentId: \"sc-1ufn8ur-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;\"]);\nexport default function Routine() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    0: exercise,\n    1: setExercise\n  } = useState([]); // Handles the form submission\n\n  const onSubmit = data => {\n    // If the input data is valid - \n    // Make a POST request to our api route with the input data\n    fetch('http://localhost:3000/addroutine', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(res => {\n      switch (res.status) {\n        case 400:\n          console.log('This is a 400 error.');\n          break;\n\n        case 429:\n          console.log('This is a 429 error. Rate limit exceeded');\n          break;\n\n        case 201:\n          res.json().then(data => {\n            // request sent\n            console.log('this worked');\n          });\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function doFetch() {\n      let url = 'http://localhost:3000/exercises';\n      const res = await fetch('http://localhost:3000/exercises', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const body = await res.json();\n      console.log('body is ...', body);\n      setExercise(body.exercisesResults);\n    }\n\n    doFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Routine Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Routine name...\",\n        name: \"routine_name\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Exercise 1 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"first_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), exercise.map((exercise, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: exercise.exercise_name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Exercise 2 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"second_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), exercise.map((exercise, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: exercise.exercise_name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Exercise 3 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"third_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), exercise.map((exercise, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: exercise.exercise_name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Exercise 4 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"fourth_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), exercise.map((exercise, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: exercise.exercise_name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Exercise 5 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"fifth_exercise\",\n        id: \"exercise_type\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          disabled: true,\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), exercise.map((exercise, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: exercise.exercise_name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Add routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/RoutineForm.js"],"names":["styled","Input","SubmitBtn","React","useState","useEffect","useForm","ErrorMessage","useRouter","Form","form","Group","div","Routine","register","handleSubmit","errors","exercise","setExercise","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","doFetch","url","exercisesResults","map","idx","exercise_name"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport Input from './FormInput'\r\nimport SubmitBtn from './SubmitBtn'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useForm,  } from \"react-hook-form\";\r\nimport ErrorMessage from '../Common/ErrorMessage'\r\nimport { useRouter } from 'next/router'\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 18rem;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nconst Group = styled.div`\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 0;\r\n    // border: 1px dashed grey;\r\n`\r\n\r\nexport default function Routine() {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [exercise, setExercise] = useState([]);\r\n\r\n    // Handles the form submission\r\n    const onSubmit = (data) => {\r\n        // If the input data is valid - \r\n        // Make a POST request to our api route with the input data\r\n        fetch('http://localhost:3000/addroutine', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            credentials: 'include',\r\n            })\r\n            .then((res) => {\r\n            switch(res.status) {\r\n                case 400:\r\n                    console.log('This is a 400 error.');\r\n                    break;\r\n                case 429:\r\n                    console.log('This is a 429 error. Rate limit exceeded');\r\n                    break;\r\n                case 201:\r\n                    res.json().then((data) => {\r\n                        // request sent\r\n                        console.log('this worked');\r\n                    })\r\n            }})\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function doFetch() {\r\n          let url = 'http://localhost:3000/exercises';\r\n          const res = await fetch('http://localhost:3000/exercises', { \r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include',\r\n          });\r\n          const body = await res.json();\r\n          console.log('body is ...', body);\r\n          setExercise(body.exercisesResults);\r\n        }\r\n    \r\n        doFetch();\r\n      }, []);\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n            <label> Routine Name : </label>\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Routine name...\"\r\n                name=\"routine_name\"\r\n                ref={register}\r\n            />\r\n\r\n            </div>\r\n\r\n            <Group>\r\n                <label> Exercise 1 : </label>\r\n                <select name=\"first_exercise\" id=\"exercise_type\" ref={register}>\r\n                    <option selected=\"selected\" disabled>Select an exercise</option>\r\n                        {exercise.map((exercise, idx) => {\r\n                            return <option key={idx}>{exercise.exercise_name}</option>\r\n                        })}\r\n                </select>\r\n            </Group>\r\n\r\n            <Group>\r\n                <label> Exercise 2 : </label>\r\n                <select name=\"second_exercise\" id=\"exercise_type\" ref={register}>\r\n                    <option selected=\"selected\" disabled>Select an exercise</option>\r\n                        {exercise.map((exercise, idx) => {\r\n                            return <option key={idx}>{exercise.exercise_name}</option>\r\n                        })}\r\n                </select>\r\n            </Group>\r\n\r\n            <Group>\r\n                <label> Exercise 3 : </label>\r\n                <select name=\"third_exercise\" id=\"exercise_type\" ref={register}>\r\n                    <option selected=\"selected\" disabled>Select an exercise</option>\r\n                        {exercise.map((exercise, idx) => {\r\n                            return <option key={idx}>{exercise.exercise_name}</option>\r\n                        })}\r\n                </select>\r\n            </Group>\r\n\r\n            <Group>\r\n                <label> Exercise 4 : </label>\r\n                <select name=\"fourth_exercise\" id=\"exercise_type\" ref={register}>\r\n                    <option selected=\"selected\" disabled>Select an exercise</option>\r\n                        {exercise.map((exercise, idx) => {\r\n                            return <option key={idx}>{exercise.exercise_name}</option>\r\n                        })}\r\n                </select>\r\n            </Group>\r\n\r\n            <Group>\r\n                <label> Exercise 5 : </label>\r\n                <select name=\"fifth_exercise\" id=\"exercise_type\" ref={register}>\r\n                    <option selected=\"selected\" disabled>Select an exercise</option>\r\n                        {exercise.map((exercise, idx) => {\r\n                            return <option key={idx}>{exercise.exercise_name}</option>\r\n                        })}\r\n                </select>\r\n            </Group>\r\n\r\n\r\n            <SubmitBtn type=\"submit\">Add routine</SubmitBtn>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}