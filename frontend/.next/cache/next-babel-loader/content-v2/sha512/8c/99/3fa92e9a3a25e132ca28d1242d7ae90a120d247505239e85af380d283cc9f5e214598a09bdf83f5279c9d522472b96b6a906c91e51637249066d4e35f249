{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: '',\n    fullname: '',\n    username: '',\n    password: ''\n  });\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    }));\n  };\n\n  return {\n    handleChange,\n    values\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/useForm.js"],"names":["useState","useEffect","useForm","values","setValues","email","fullname","username","password","errors","setErrors","handleChange","e","name","value","target"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,QAAQ,EAAE;AAJuB,GAAD,CAApC;AAMA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAX,IAAAA,SAAS,iCACFD,MADE;AAEL,OAACU,IAAD,GAAQC;AAFH,OAAT;AAIH,GAND;;AAQA,SAAO;AAAEH,IAAAA,YAAF;AAAgBR,IAAAA;AAAhB,GAAP;AACH,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useForm = () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        fullname: '',\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    return { handleChange, values }\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}