{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport SubmitBtn from './SubmitBtn';\nimport Input from './FormInput';\nimport ErrorMessage from '../Common/ErrorMessage';\nimport styled from 'styled-components';\nconst Form = styled.form.withConfig({\n  displayName: \"RegisterForm__Form\",\n  componentId: \"ri5t6n-0\"\n})([\"display:flex;flex-direction:column;width:18rem;\"]);\n\nconst RegisterForm = () => {\n  // Setting the state\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: fullname,\n    1: setFullname\n  } = useState('');\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: emailErr,\n    1: setEmailErr\n  } = useState({});\n  const {\n    0: fullnameErr,\n    1: setFullnameErr\n  } = useState({});\n  const {\n    0: usernameErr,\n    1: setUsernameErr\n  } = useState({});\n  const {\n    0: passwordErr,\n    1: setPasswordErr\n  } = useState({});\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false); // Prevents form from submitting normally on submit\n\n  const onSubmit = e => {\n    e.preventDefault();\n    set;\n    const isValid = formValidation(); // If the data that is input is valid -\n\n    if (isValid) {\n      // Send this data to the api\n      setEmail('');\n      setFullname('');\n      setUsername('');\n      setPassword('');\n    }\n  };\n  /* Frontend form validation is handled here */\n\n\n  const formValidation = () => {\n    const emailErr = {};\n    const fullnameErr = {};\n    const usernameErr = {};\n    const passwordErr = {};\n    let isValid = true; // Regex to test email against\n\n    let regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // If email is left empty or does not match the regex -\n\n    if (email.length === 0) {\n      emailErr.emailEmpty = \"You must enter an email address.\";\n    } else if (!email.includes('@')) {\n      emailErr.emailMissingSymb = \"Invalid email. Email must have @\";\n    } else if (regexp.test(email) === false) {\n      emailErr.emailWrongChars = \"This is not a valid email address.\";\n      isValid = false;\n    } // If full name is left empty or first letter of the full name isn't capitalized -\n\n\n    if (fullname.length === 0) {\n      fullnameErr.fullnameEmpty = \"You must enter a full name.\";\n    } else if (fullname[0] !== fullname[0].toUpperCase()) {\n      fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\";\n      isValid = false;\n    } // If username is left empty or length of the username is less than five characters -\n\n\n    if (username.length === 0) {\n      usernameErr.usernameEmpty = \"You must enter a username.\";\n    } else if (username.length < 5) {\n      usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n      isValid = false;\n    } // If the length of the password is less than three characters -\n\n\n    if (password.length === 0) {\n      passwordErr.passwordEmpty = \"You must enter a password.\";\n    } else if (password.length < 4) {\n      passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\n      isValid = false;\n    } // Update error objects\n\n\n    setEmailErr(emailErr);\n    setFullnameErr(fullnameErr);\n    setUsernameErr(usernameErr);\n    setPasswordErr(passwordErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), Object.keys(emailErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: emailErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Full name\",\n      value: fullname,\n      onChange: e => {\n        setFullname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), Object.keys(fullnameErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: fullnameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), Object.keys(usernameErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: usernameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), Object.keys(passwordErr).map(key => {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: passwordErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 31\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/RegisterForm.js"],"names":["React","useState","SubmitBtn","Input","ErrorMessage","styled","Form","form","RegisterForm","email","setEmail","fullname","setFullname","username","setUsername","password","setPassword","emailErr","setEmailErr","fullnameErr","setFullnameErr","usernameErr","setUsernameErr","passwordErr","setPasswordErr","submitting","setSubmitting","onSubmit","e","preventDefault","set","isValid","formValidation","regexp","length","emailEmpty","includes","emailMissingSymb","test","emailWrongChars","fullnameEmpty","toUpperCase","startsLowercase","usernameEmpty","usernameShort","passwordEmpty","passwordShort","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SubmitBtn from './SubmitBtn'\nimport Input from './FormInput'\nimport ErrorMessage from '../Common/ErrorMessage'\nimport styled from 'styled-components'\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 18rem;\n`\n\nconst RegisterForm = () => {\n\n    // Setting the state\n    const [email, setEmail] = useState('');\n    const [fullname, setFullname] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailErr, setEmailErr] = useState({});\n    const [fullnameErr, setFullnameErr] = useState({});\n    const [usernameErr, setUsernameErr] = useState({});\n    const [passwordErr, setPasswordErr] = useState({});\n\n    const [ submitting, setSubmitting ] = useState(false);\n\n\n    // Prevents form from submitting normally on submit\n    const onSubmit = (e) => {\n        e.preventDefault();\n        set\n        const isValid = formValidation();\n        // If the data that is input is valid -\n        if (isValid) {\n            // Send this data to the api\n            setEmail('');\n            setFullname('');\n            setUsername('');\n            setPassword('');\n        }\n    }\n\n    /* Frontend form validation is handled here */\n    const formValidation = () => {\n        const emailErr = {};\n        const fullnameErr = {};\n        const usernameErr = {};\n        const passwordErr = {};\n        let isValid = true;\n\n        // Regex to test email against\n        let regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n        // If email is left empty or does not match the regex -\n        if (email.length === 0) {\n            emailErr.emailEmpty = \"You must enter an email address.\";\n        } else if (!email.includes('@')) {\n            emailErr.emailMissingSymb = \"Invalid email. Email must have @\";\n        } else if (regexp.test(email) === false) {\n            emailErr.emailWrongChars = \"This is not a valid email address.\";\n            isValid = false;\n        }\n\n        // If full name is left empty or first letter of the full name isn't capitalized -\n        if (fullname.length === 0) {\n            fullnameErr.fullnameEmpty = \"You must enter a full name.\";\n        } else if (fullname[0] !== fullname[0].toUpperCase()) {\n            fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\";\n            isValid = false;\n        } \n\n        // If username is left empty or length of the username is less than five characters -\n        if (username.length === 0) {\n            usernameErr.usernameEmpty = \"You must enter a username.\";\n        } else if (username.length < 5) {\n            usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n            isValid = false;\n        }\n\n        // If the length of the password is less than three characters -\n        if (password.length === 0) {\n            passwordErr.passwordEmpty = \"You must enter a password.\";\n        } else if (password.length < 4) {\n            passwordErr.passwordShort = \"Password needs to be 4 or more characters.\";\n            isValid = false;\n        }\n\n        // Update error objects\n        setEmailErr(emailErr);\n        setFullnameErr(fullnameErr);\n        setUsernameErr(usernameErr);\n        setPasswordErr(passwordErr);\n        return isValid;\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            {/* <label for=\"email\">Email : </label> */}\n            <Input type=\"text\" \n                   placeholder=\"Email\"\n                   value={email}\n                   onChange={(e) => {setEmail(e.target.value)}}/>\n                   {Object.keys(emailErr).map((key) => {\n                       return <ErrorMessage>{emailErr[key]}</ErrorMessage>\n                   })}\n            {/* <label for=\"fullname\">Full name : </label> */}\n            <Input type=\"text\" \n                   placeholder=\"Full name\"\n                   value={fullname}\n                   onChange={(e) => {setFullname(e.target.value)}}/>\n                   {Object.keys(fullnameErr).map((key) => {\n                       return <ErrorMessage>{fullnameErr[key]}</ErrorMessage>\n                   })}\n            {/* <label for=\"username\">Username : </label> */}\n            <Input type=\"text\" \n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => {setUsername(e.target.value)}}/>\n                    {Object.keys(usernameErr).map((key) => {\n                       return <ErrorMessage>{usernameErr[key]}</ErrorMessage>\n                   })}\n            {/* <label for=\"password\">Password : </label> */}\n            <Input type=\"password\" \n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {setPassword(e.target.value)}}/>\n                    {Object.keys(passwordErr).map((key) => {\n                       return <ErrorMessage>{passwordErr[key]}</ErrorMessage>\n                   })}\n            <SubmitBtn type=\"submit\">Sign up</SubmitBtn>\n        </Form>\n    )\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}