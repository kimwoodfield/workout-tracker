{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kimwoodfield\\\\Documents\\\\GitHub\\\\workout-tracker\\\\frontend\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ErrorMessage from '../Common/ErrorMessage';\n\nvar RegisterForm = function RegisterForm() {\n  _s();\n\n  // Setting the state\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      fullname = _useState2[0],\n      setFullname = _useState2[1];\n\n  var _useState3 = useState(''),\n      username = _useState3[0],\n      setUsername = _useState3[1];\n\n  var _useState4 = useState(''),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      emailErr = _useState5[0],\n      setEmailErr = _useState5[1];\n\n  var _useState6 = useState({}),\n      fullnameErr = _useState6[0],\n      setFullnameErr = _useState6[1];\n\n  var _useState7 = useState({}),\n      usernameErr = _useState7[0],\n      setUsernameErr = _useState7[1];\n\n  var _useState8 = useState({}),\n      passwordErr = _useState8[0],\n      setPasswordErr = _useState8[1]; // Prevents form from submitting normally on submit\n\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    var isValid = formValidation();\n  };\n  /* Frontend form validation is handled here */\n\n\n  var formValidation = function formValidation() {\n    var emailErr = {};\n    var fullnameErr = {};\n    var usernameErr = {};\n    var passwordErr = {};\n    var isValid = true; // Regex to test email against\n\n    var regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // If the email input does not match -\n\n    if (regexp.test(email) === false) {\n      emailErr.emailWrongChars = \"This is not a valid email address.\";\n      isValid;\n    } // If the first letter of the full name isn't capitalized -\n\n\n    if (fullname[0] !== fullname[0].toUpperCase()) {\n      fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\";\n    } // If the length of the username is less than five characters -\n\n\n    if (username.length < 5) {\n      usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n    } // If the length of the password is less than three characters -\n\n\n    if (password.length < 3) {\n      passwordErr.passwordShort = \"Password needs to be 3 or more characters.\";\n    } // Update error objects\n\n\n    setEmailErr(emailErr);\n    setFullnameErr(fullnameErr);\n    setUsernameErr(usernameErr);\n    setPasswordErr(passwordErr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"email\",\n      children: \"Email : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: function onChange(e) {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, _this), Object.keys(emailErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: emailErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"fullname\",\n      children: \"Full name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fullname,\n      onChange: function onChange(e) {\n        setFullname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, _this), Object.keys(fullnameErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: fullnameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"username\",\n      children: \"Username : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: function onChange(e) {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, _this), Object.keys(usernameErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: usernameErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"password\",\n      children: \"Password : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: function onChange(e) {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, _this), Object.keys(passwordErr).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: passwordErr[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegisterForm, \"XNb9uxBLtTF0PFOzJhJivmDnwVA=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/RegisterForm.js"],"names":["React","useState","ErrorMessage","RegisterForm","email","setEmail","fullname","setFullname","username","setUsername","password","setPassword","emailErr","setEmailErr","fullnameErr","setFullnameErr","usernameErr","setUsernameErr","passwordErr","setPasswordErr","onSubmit","e","preventDefault","isValid","formValidation","regexp","test","emailWrongChars","toUpperCase","startsLowercase","length","usernameShort","passwordShort","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ErrorMessage from '../Common/ErrorMessage'\r\n\r\nconst RegisterForm = () => {\r\n\r\n    // Setting the state\r\n    const [email, setEmail] = useState('');\r\n    const [fullname, setFullname] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [emailErr, setEmailErr] = useState({});\r\n    const [fullnameErr, setFullnameErr] = useState({});\r\n    const [usernameErr, setUsernameErr] = useState({});\r\n    const [passwordErr, setPasswordErr] = useState({});\r\n\r\n\r\n    // Prevents form from submitting normally on submit\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n    }\r\n\r\n    /* Frontend form validation is handled here */\r\n    const formValidation = () => {\r\n        const emailErr = {};\r\n        const fullnameErr = {};\r\n        const usernameErr = {};\r\n        const passwordErr = {};\r\n        let isValid = true;\r\n\r\n        // Regex to test email against\r\n        let regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        // If the email input does not match -\r\n        if (regexp.test(email) === false) {\r\n            emailErr.emailWrongChars = \"This is not a valid email address.\"\r\n            isValid\r\n        }\r\n\r\n        // If the first letter of the full name isn't capitalized -\r\n        if (fullname[0] !== fullname[0].toUpperCase()) {\r\n            fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\"\r\n        }\r\n\r\n        // If the length of the username is less than five characters -\r\n        if (username.length < 5) {\r\n            usernameErr.usernameShort = \"Username needs to be 5 or more characters.\"\r\n        }\r\n\r\n        // If the length of the password is less than three characters -\r\n        if (password.length < 3) {\r\n            passwordErr.passwordShort = \"Password needs to be 3 or more characters.\"\r\n        }\r\n\r\n        // Update error objects\r\n        setEmailErr(emailErr);\r\n        setFullnameErr(fullnameErr);\r\n        setUsernameErr(usernameErr);\r\n        setPasswordErr(passwordErr);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label for=\"email\">Email : </label>\r\n            <input type=\"text\" \r\n                   value={email}\r\n                   onChange={(e) => {setEmail(e.target.value)}}/>\r\n                   <br />\r\n                   {Object.keys(emailErr).map((key) => {\r\n                       return <ErrorMessage>{emailErr[key]}</ErrorMessage>\r\n                   })}\r\n            <label for=\"fullname\">Full name : </label>\r\n            <input type=\"text\" \r\n                    value={fullname}\r\n                    onChange={(e) => {setFullname(e.target.value)}}/>\r\n                    <br />\r\n                    {Object.keys(fullnameErr).map((key) => {\r\n                       return <ErrorMessage>{fullnameErr[key]}</ErrorMessage>\r\n                   })}\r\n            <label for=\"username\">Username : </label>\r\n            <input type=\"text\" \r\n                    value={username}\r\n                    onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    <br />\r\n                    {Object.keys(usernameErr).map((key) => {\r\n                       return <ErrorMessage>{usernameErr[key]}</ErrorMessage>\r\n                   })}\r\n            <label for=\"password\">Password : </label>\r\n            <input type=\"password\" \r\n                    value={password}\r\n                    onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    <br />\r\n                    {Object.keys(passwordErr).map((key) => {\r\n                       return <ErrorMessage>{passwordErr[key]}</ErrorMessage>\r\n                   })}\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n"]},"metadata":{},"sourceType":"module"}