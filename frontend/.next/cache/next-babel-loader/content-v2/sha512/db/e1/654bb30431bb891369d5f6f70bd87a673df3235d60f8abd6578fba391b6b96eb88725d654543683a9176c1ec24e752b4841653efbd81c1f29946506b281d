{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js\";\nimport styled from \"styled-components\";\nimport SubmitBtn from \"./SubmitBtn\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\nconst Form = styled.form.withConfig({\n  displayName: \"WorkoutForm__Form\",\n  componentId: \"yjzq5p-0\"\n})([\"display:flex;flex-direction:column;padding-bottom:1rem;width:90%;box-sizing:border-box;border:2px dashed salmon;margin:0 auto;align-items:center;\"]);\nconst Group = styled.div.withConfig({\n  displayName: \"WorkoutForm__Group\",\n  componentId: \"yjzq5p-1\"\n})([\"padding:0.5rem 0;margin:0.5rem 0;width:100%;\"]);\nexport default function WorkoutForm() {\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    0: routine,\n    1: setRoutine\n  } = useState([]);\n  const {\n    0: exercise,\n    1: setExercise\n  } = useState([]);\n  let urlValue = router.query; // { id: 34 }\n\n  let currentWorkoutID = urlValue.id; // 34\n\n  const onSubmit = data => {\n    fetch(\"http://localhost:3000/currentWorkout/\" + currentWorkoutID, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n      credentials: \"include\"\n    }).then(res => {\n      switch (res.status) {\n        case 400:\n          console.log(\"This is a 400 error.\");\n          break;\n\n        case 429:\n          console.log(\"This is a 429 error. Rate limit exceeded\");\n          break;\n\n        case 201:\n          res.json().then(data => {\n            // request sent\n            console.log(\"this worked\");\n            alert(\"Workout complete!\"); // router.push('/routines');\n          });\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function doFetch() {\n      const res = await fetch(\"http://localhost:3000/currentWorkout/\" + currentWorkoutID, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const body = await res.json();\n      console.log(\"body is ...\", body);\n      setExercise(body.currentWorkout.RoutineExercises);\n      setRoutine(body.currentWorkout.RoutineName);\n    }\n\n    doFetch();\n  }, []);\n  let currentDate = new Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: routine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"firstExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), errors.firstExercise_weight && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"firstExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), errors.firstExercise_sets && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"firstExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), errors.firstExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"secondExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), errors.secondExercise_weight && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"secondExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), errors.secondExercise_sets && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"secondExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), errors.secondExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"thirdExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), errors.thirdExercise_weight && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"thirdExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), errors.thirdExercise_sets && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"thirdExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), errors.thirdExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"fourthExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), errors.fourthExercise_weight && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"fourthExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), errors.fourthExercise_sets && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"fourthExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), errors.fourthExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          maxLength: 6,\n          pattern: /^[A-Za-z]+$/i\n        }),\n        type: \"number\",\n        name: \"fifthExercise_weight\",\n        placeholder: \"Enter weight in KG...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), errors.fifthExercise_weight && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 4\n        }),\n        type: \"number\",\n        name: \"fifthExercise_sets\",\n        placeholder: \"Enter sets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), errors.fifthExercise_sets && \"Invalid input\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true,\n          max: 40\n        }),\n        type: \"number\",\n        name: \"fifthExercise_reps\",\n        placeholder: \"Enter reps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), errors.fifthExercise_reps && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      type: \"submit\",\n      children: \"Finish workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/WorkoutForm.js"],"names":["styled","SubmitBtn","React","useState","useEffect","useForm","useRouter","Form","form","Group","div","WorkoutForm","router","register","handleSubmit","errors","routine","setRoutine","exercise","setExercise","urlValue","query","currentWorkoutID","id","onSubmit","data","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","console","log","json","alert","doFetch","currentWorkout","RoutineExercises","RoutineName","currentDate","Date","toLocaleString","required","maxLength","pattern","firstExercise_weight","max","firstExercise_sets","firstExercise_reps","secondExercise_weight","secondExercise_sets","secondExercise_reps","thirdExercise_weight","thirdExercise_sets","thirdExercise_reps","fourthExercise_weight","fourthExercise_sets","fourthExercise_reps","fifthExercise_weight","fifthExercise_sets","fifthExercise_reps"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport SubmitBtn from \"./SubmitBtn\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 1rem;\n  width: 90%;\n  box-sizing: border-box;\n  border: 2px dashed salmon;\n  margin: 0 auto;\n  align-items: center;\n`;\n\nconst Group = styled.div`\n  padding: 0.5rem 0;\n  margin: 0.5rem 0;\n  width: 100%;\n`;\n\nexport default function WorkoutForm() {\n  const router = useRouter();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const [routine, setRoutine] = useState([]);\n  const [exercise, setExercise] = useState([]);\n\n  let urlValue = router.query; // { id: 34 }\n  let currentWorkoutID = urlValue.id; // 34\n\n  const onSubmit = (data) => {\n    fetch(\"http://localhost:3000/currentWorkout/\" + currentWorkoutID, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n      credentials: \"include\",\n    }).then((res) => {\n      switch (res.status) {\n        case 400:\n          console.log(\"This is a 400 error.\");\n          break;\n        case 429:\n          console.log(\"This is a 429 error. Rate limit exceeded\");\n          break;\n        case 201:\n          res.json().then((data) => {\n            // request sent\n            console.log(\"this worked\");\n            alert(\"Workout complete!\");\n            // router.push('/routines');\n          });\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function doFetch() {\n      const res = await fetch(\n        \"http://localhost:3000/currentWorkout/\" + currentWorkoutID,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n        }\n      );\n      const body = await res.json();\n      console.log(\"body is ...\", body);\n      setExercise(body.currentWorkout.RoutineExercises);\n      setRoutine(body.currentWorkout.RoutineName);\n    }\n\n    doFetch();\n  }, []);\n\n  let currentDate = new Date().toLocaleString();\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Group>\n        <p>{routine}</p>\n        <p>{currentDate}</p>\n      </Group>\n\n      <Group>\n        <label>{exercise[0]}</label>\n        <br />\n        <input\n          ref={register({\n            required: true,\n            maxLength: 6,\n            pattern: /^[A-Za-z]+$/i,\n          })}\n          type=\"number\"\n          name=\"firstExercise_weight\"\n          placeholder=\"Enter weight in KG...\"\n        />\n        {errors.firstExercise_weight && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 4 })}\n          type=\"number\"\n          name=\"firstExercise_sets\"\n          placeholder=\"Enter sets...\"\n        />\n        {errors.firstExercise_sets && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 40 })}\n          type=\"number\"\n          name=\"firstExercise_reps\"\n          placeholder=\"Enter reps...\"\n        />\n        {errors.firstExercise_reps && <span>Invalid input</span>}\n        <br />\n      </Group>\n\n      <Group>\n        <label>{exercise[1]}</label>\n        <br />\n        <input\n          ref={register({\n            required: true,\n            maxLength: 6,\n            pattern: /^[A-Za-z]+$/i,\n          })}\n          type=\"number\"\n          name=\"secondExercise_weight\"\n          placeholder=\"Enter weight in KG...\"\n        />\n        {errors.secondExercise_weight && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 4 })}\n          type=\"number\"\n          name=\"secondExercise_sets\"\n          placeholder=\"Enter sets...\"\n        />\n        {errors.secondExercise_sets && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 40 })}\n          type=\"number\"\n          name=\"secondExercise_reps\"\n          placeholder=\"Enter reps...\"\n        />\n        {errors.secondExercise_reps && <span>Invalid input</span>}\n        <br />\n      </Group>\n\n      <Group>\n        <label>{exercise[2]}</label>\n        <br />\n        <input\n          ref={register({\n            required: true,\n            maxLength: 6,\n            pattern: /^[A-Za-z]+$/i,\n          })}\n          type=\"number\"\n          name=\"thirdExercise_weight\"\n          placeholder=\"Enter weight in KG...\"\n        />\n        {errors.thirdExercise_weight && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 4 })}\n          type=\"number\"\n          name=\"thirdExercise_sets\"\n          placeholder=\"Enter sets...\"\n        />\n        {errors.thirdExercise_sets && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 40 })}\n          type=\"number\"\n          name=\"thirdExercise_reps\"\n          placeholder=\"Enter reps...\"\n        />\n        {errors.thirdExercise_reps && <span>Invalid input</span>}\n        <br />\n      </Group>\n\n      <Group>\n        <label>{exercise[3]}</label>\n        <br />\n        <input\n          ref={register({\n            required: true,\n            maxLength: 6,\n            pattern: /^[A-Za-z]+$/i,\n          })}\n          type=\"number\"\n          name=\"fourthExercise_weight\"\n          placeholder=\"Enter weight in KG...\"\n        />\n        {errors.fourthExercise_weight && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 4 })}\n          type=\"number\"\n          name=\"fourthExercise_sets\"\n          placeholder=\"Enter sets...\"\n        />\n        {errors.fourthExercise_sets && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 40 })}\n          type=\"number\"\n          name=\"fourthExercise_reps\"\n          placeholder=\"Enter reps...\"\n        />\n        {errors.fourthExercise_reps && <span>Invalid input</span>}\n        <br />\n      </Group>\n      \n      <Group>\n        <label>{exercise[4]}</label>\n        <br />\n        <input\n          ref={register({\n            required: true,\n            maxLength: 6,\n            pattern: /^[A-Za-z]+$/i,\n          })}\n          type=\"number\"\n          name=\"fifthExercise_weight\"\n          placeholder=\"Enter weight in KG...\"\n        />\n        {errors.fifthExercise_weight && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 4 })}\n          type=\"number\"\n          name=\"fifthExercise_sets\"\n          placeholder=\"Enter sets...\"\n        />\n        {errors.fifthExercise_sets && \"Invalid input\"}\n        <br />\n        <input\n          ref={register({ required: true, max: 40 })}\n          type=\"number\"\n          name=\"fifthExercise_reps\"\n          placeholder=\"Enter reps...\"\n        />\n        {errors.fifthExercise_reps && <span>Invalid input</span>}\n        <br />\n      </Group>\n\n      <SubmitBtn type=\"submit\">Finish workout</SubmitBtn>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}