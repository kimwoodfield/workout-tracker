{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kimwoodfield\\\\Documents\\\\GitHub\\\\workout-tracker\\\\frontend\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nvar RegisterForm = function RegisterForm() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      fullname = _useState2[0],\n      setFullname = _useState2[1];\n\n  var _useState3 = useState(''),\n      username = _useState3[0],\n      setUsername = _useState3[1];\n\n  var _useState4 = useState(''),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      emailErr = _useState5[0],\n      setEmailErr = _useState5[1];\n\n  var _useState6 = useState({}),\n      fullnameErr = _useState6[0],\n      setFullnameErr = _useState6[1];\n\n  var _useState7 = useState({}),\n      usernameErr = _useState7[0],\n      setUsernameErr = _useState7[1];\n\n  var _useState8 = useState({}),\n      passwordErr = _useState8[0],\n      setPasswordErr = _useState8[1];\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    var isValid = formValidation();\n  };\n\n  var formValidation = function formValidation() {\n    var emailErr = {};\n    var fullnameErr = {};\n    var usernameErr = {};\n    var passwordErr = {};\n    var isValid = true;\n    var regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (regexp.test(email) === false) {\n      emailErr.emailWrongChars = \"This is not a valid email address.\";\n    }\n\n    if (fullname[0] !== fullname[0].toUpperCase()) {\n      fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\";\n    }\n\n    if (username.length < 5) {\n      usernameErr.usernameShort = \"Username needs to be 5 or more characters.\";\n    }\n\n    if (password.length < 3) {\n      passwordErr.passwordShort = \"Password needs to be 3 or more characters.\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"email\",\n      children: \"Email : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: function onChange(e) {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"fullname\",\n      children: \"Full name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fullname,\n      onChange: function onChange(e) {\n        setFullname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"username\",\n      children: \"Username : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: function onChange(e) {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      \"for\": \"password\",\n      children: \"Password : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: function onChange(e) {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegisterForm, \"XNb9uxBLtTF0PFOzJhJivmDnwVA=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/kimwoodfield/Documents/GitHub/workout-tracker/frontend/components/Forms/RegisterForm.js"],"names":["React","useState","RegisterForm","email","setEmail","fullname","setFullname","username","setUsername","password","setPassword","emailErr","setEmailErr","fullnameErr","setFullnameErr","usernameErr","setUsernameErr","passwordErr","setPasswordErr","onSubmit","e","preventDefault","isValid","formValidation","regexp","test","emailWrongChars","toUpperCase","startsLowercase","length","usernameShort","passwordShort","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [fullname, setFullname] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [emailErr, setEmailErr] = useState({});\r\n    const [fullnameErr, setFullnameErr] = useState({});\r\n    const [usernameErr, setUsernameErr] = useState({});\r\n    const [passwordErr, setPasswordErr] = useState({});\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n    }\r\n\r\n    const formValidation = () => {\r\n        const emailErr = {};\r\n        const fullnameErr = {};\r\n        const usernameErr = {};\r\n        const passwordErr = {};\r\n        let isValid = true;\r\n\r\n        let regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (regexp.test(email) === false) {\r\n            emailErr.emailWrongChars = \"This is not a valid email address.\"\r\n        }\r\n\r\n        if (fullname[0] !== fullname[0].toUpperCase()) {\r\n            fullnameErr.startsLowercase = \"First letter of full name needs to be capitalized.\"\r\n        }\r\n\r\n        if (username.length < 5) {\r\n            usernameErr.usernameShort = \"Username needs to be 5 or more characters.\"\r\n        }\r\n\r\n        if (password.length < 3) {\r\n            passwordErr.passwordShort = \"Password needs to be 3 or more characters.\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label for=\"email\">Email : </label>\r\n            <input type=\"text\" \r\n                   value={email}\r\n                   onChange={(e) => {setEmail(e.target.value)}}/>\r\n                   <br />\r\n            <label for=\"fullname\">Full name : </label>\r\n            <input type=\"text\" \r\n                    value={fullname}\r\n                    onChange={(e) => {setFullname(e.target.value)}}/>\r\n                    <br />\r\n            <label for=\"username\">Username : </label>\r\n            <input type=\"text\" \r\n                    value={username}\r\n                    onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    <br />\r\n            <label for=\"password\">Password : </label>\r\n            <input type=\"password\" \r\n                    value={password}\r\n                    onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    <br />\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n"]},"metadata":{},"sourceType":"module"}